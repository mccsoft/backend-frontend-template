apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: templateapp
  name: files-volume-pvc
spec:
  # storageClassName: manual
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: templateapp-main-api
  namespace: templateapp
  labels:
    app: templateapp-main-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: templateapp-main-api
  template:
    metadata:
      labels:
        app: templateapp-main-api
    spec:
      volumes:
        - name: files-volume
          persistentVolumeClaim:
            claimName: files-volume-pvc
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: templateapp-main-api
          image: ${DOCKER_IMAGE}
          envFrom:
            - configMapRef:
                name: templateapp-configmap-secret
            - configMapRef:
                name: templateapp-configmap
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: '/files'
              name: files-volume
---
apiVersion: v1
kind: Service
metadata:
  namespace: templateapp
  name: templateapp-main-api-service
spec:
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: templateapp-main-api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: templateapp
  name: templateapp-main-api-ingress
  annotations:
    kubernetes.io/ingress.class: 'traefik'
    cert-manager.io/cluster-issuer: 'letsencrypt'
spec:
  rules:
    - host: ${VIRTUAL_HOST}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: templateapp-main-api-service
                port:
                  number: 80
  tls:
    - secretName: templateapp-main-api-tls
      hosts:
        - ${VIRTUAL_HOST}
